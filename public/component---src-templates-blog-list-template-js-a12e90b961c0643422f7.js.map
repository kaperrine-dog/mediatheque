{"version":3,"sources":["webpack://mediatheque/./src/components/Blog/BlogCard.js","webpack://mediatheque/./src/components/PageIntro/PageIntro.js","webpack://mediatheque/./src/templates/blog-list-template.js"],"names":["BlogItem","styled","BlogItemContent","blog","slug","title","images","published","image","getImage","className","cover","bg","to","G","alt","TitleArea","Title","ContentArea","subTitle","paragraph","Section","FlexContainer","FlexItem","Pagination","props","pageContext","currentPage","numPages","isFirst","isLast","prevPage","nextPage","data","post","edges","map","node","key","id","Array","from","length","_","i"],"mappings":"wJAMMA,EAAWC,wBAAH,8DAAGA,CAAH,gCAKRC,EAAkBD,oBAAH,qEAAGA,CAAH,uOA+CrB,IAxBiB,SAAC,GAAc,IAAZE,EAAW,EAAXA,KACVC,EAAmCD,EAAnCC,KAAMC,EAA6BF,EAA7BE,MAAOC,EAAsBH,EAAtBG,OAAQC,EAAcJ,EAAdI,UAGvBC,GAAQC,OAASH,EAAO,IAC9B,OACE,gBAACN,EAAD,KACE,gBAAC,IAAD,CACEU,UAAU,MACVC,OAAK,EACLC,GAAG,oBACHC,GAAE,UAAYT,GAEd,gBAAC,EAAAU,EAAD,CAAaN,MAAOA,EAAOO,IAAI,gBAC/B,gBAACb,EAAD,KACE,0BAAKG,GACL,yBAAIE,GACJ,0BAAQG,UAAU,OAAlB,kB,uDChDJM,EAAYf,oBAAH,4DAAGA,CAAH,kDAMTgB,EAAQhB,mBAAH,wDAAGA,CAAH,0CAKLiB,EAAcjB,oBAAH,8DAAGA,CAAH,qFA0BjB,IAdkB,SAAC,GAAoC,IAAlCI,EAAiC,EAAjCA,MAAOc,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UACpC,OACE,gCACE,gBAACJ,EAAD,KACE,gBAACC,EAAD,KAAQZ,IAEV,gBAACa,EAAD,KACE,0BAAKC,GACL,yBAAIC,O,gHCzBNC,EAAUpB,wBAAH,mEAAGA,CAAH,6DAKPqB,EAAgBrB,oBAAH,yEAAGA,CAAH,kCAKbsB,EAAWtB,oBAAH,oEAAGA,CAAH,oHAYRuB,EAAavB,oBAAH,sEAAGA,CAAH,+KAuHhB,UA9Fa,SAAAwB,GAAU,IAAD,EACcA,EAAMC,YAAhCC,EADY,EACZA,YAAaC,EADD,EACCA,SAEfC,EAA0B,IAAhBF,EACVG,EAASH,IAAgBC,EAEzBG,EACJJ,EAAc,GAAM,EAApB,oBAA6CA,EAAc,GACvDK,EAAQ,WAAaL,EAAc,GACjCM,EAASR,EAATQ,KACR,OACE,gCACE,gBAAC,IAAD,CAAK5B,MAAM,UACX,2BAASK,UAAU,mBACjB,gBAAC,IAAD,KACE,gBAAC,IAAD,CACEL,MAAM,OACNc,SAAS,qFACTC,UAAU,4LAEZ,gBAACC,EAAD,KACE,gBAACC,EAAD,KACGW,EAAKC,KAAKC,MAAMC,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACtB,OACE,gBAACd,EAAD,KACE,gBAAC,IAAD,CAAUe,IAAKD,EAAKE,GAAIpC,KAAMkC,UAMxC,gBAACb,EAAD,MACIK,GACA,gBAAC,IAAD,CACEnB,UAAU,MACVC,OAAK,EACLC,GAAG,oBACHC,GAAIkB,GAJN,QAUDS,MAAMC,KAAK,CAAEC,OAAQd,IAAY,SAACe,EAAGC,GACpC,OACE,gBAAC,IAAD,CACEN,IAAKM,EACLjC,OAAK,EACLC,GAAG,oBACHC,GAAE,WAAkB,IAAN+B,EAAU,GAAKA,EAAI,GACjClC,UAAWkC,EAAI,IAAMjB,EAAc,iBAAmB,OAErDiB,EAAI,OAITd,GACA,gBAAC,IAAD,CACEpB,UAAU,MACVC,OAAK,EACLC,GAAG,oBACHC,GAAImB,GAJN","file":"component---src-templates-blog-list-template-js-a12e90b961c0643422f7.js","sourcesContent":["import {GatsbyImage, getImage} from \"gatsby-plugin-image\"\nimport AniLink from \"gatsby-plugin-transition-link/AniLink\"\nimport React from \"react\"\nimport styled from \"styled-components\"\n//import { Background } from 'react-parallax';\n\nconst BlogItem = styled.article`\n  width: 100%;\n  padding: 0 20px;\n`\n\nconst BlogItemContent = styled.div`\n  background-color: var(--blogPanelBG);\n  border-top: 3px solid var(--primary);\n  padding: 2.5rem 1.25rem;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n\n  @media (min-width: 768px) {\n    margin-bottom: 0;\n  }\n\n  h2 {\n    margin-top: 0;\n    margin-bottom: 20px;\n  }\n\n  p {\n    margin-bottom: 40px;\n  }\n`\n\nconst BlogCard = ({ blog }) => {\n  const { slug, title, images, published } = blog\n\n  // let mainImage = images[0].fluid\n  const image = getImage(images[0])\n  return (\n    <BlogItem>\n      <AniLink\n        className=\"btn\"\n        cover\n        bg=\"var(--background)\"\n        to={`/blogs/${slug}`}\n      >\n        <GatsbyImage image={image} alt=\"Single Post\" />\n        <BlogItemContent>\n          <h2>{title}</h2>\n          <p>{published}</p>\n          <button className=\"btn\">Read Post</button>\n        </BlogItemContent>\n      </AniLink>\n    </BlogItem>\n  )\n}\n\nexport default BlogCard\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nconst TitleArea = styled.div`\n  @media (min-width: 768px) {\n    grid-column: 1 / 2;\n  }\n`\n\nconst Title = styled.h1`\n  margin-top: 0;\n  margin-bottom: 2.125rem;\n`\n\nconst ContentArea = styled.div`\n  grid-column: 1/4;\n  @media (min-width: 768px) {\n    grid-column: 2 / 4;\n\n    h2,\n    p {\n      margin-top: 0;\n    }\n  }\n`\n\nconst PageIntro = ({ title, subTitle, paragraph }) => {\n  return (\n    <>\n      <TitleArea>\n        <Title>{title}</Title>\n      </TitleArea>\n      <ContentArea>\n        <h2>{subTitle}</h2>\n        <p>{paragraph}</p>\n      </ContentArea>\n    </>\n  )\n}\n\nexport default PageIntro\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport AniLink from \"gatsby-plugin-transition-link/AniLink\"\nimport styled from \"styled-components\"\nimport Grid from \"../components/Grid/Grid\"\nimport PageIntro from \"../components/PageIntro/PageIntro\"\nimport BlogCard from \"../components/Blog/BlogCard\"\nimport Seo from \"../components/SEO\"\n\nconst Section = styled.section`\n  grid-column: 1 / 4;\n  margin-left: -20px;\n  margin-right: -20px;\n`\nconst FlexContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`\n\nconst FlexItem = styled.div`\n  width: 100%;\n  margin-bottom: 40px;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n  @media (min-width: 768px) {\n    flex: 0 0 calc(100% / 3);\n  }\n`\n\nconst Pagination = styled.div`\n  grid-column: 1 / 4;\n  text-align: right;\n\n  .btn {\n    margin-right: 20px;\n\n    &:hover {\n      cursor: pointer;\n    }\n\n    &.btn-active {\n      color: var(--primary);\n\n      &:after {\n        display: none;\n      }\n    }\n\n    &:last-child {\n      margin-right: 0;\n    }\n  }\n`\n\nconst Blog = props => {\n  const { currentPage, numPages } = props.pageContext\n\n  const isFirst = currentPage === 1\n  const isLast = currentPage === numPages\n\n  const prevPage =\n    currentPage - 1 === 1 ? `/blogs` : `/blogs/${currentPage - 1}`\n  const nextPage = `/blogs/${currentPage + 1}`\n  const { data } = props\n  return (\n    <>\n      <Seo title=\"Blogs\" />\n      <section className=\"section-padding\">\n        <Grid>\n          <PageIntro\n            title=\"Blog\"\n            subTitle=\"A simple blog system that will allow you to update your followers with recent news\"\n            paragraph=\"Aliquam tempus libero nec quam aliquam fringilla. Suspendisse potenti. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. In quis ipsum magna.\"\n          />\n          <Section>\n            <FlexContainer>\n              {data.post.edges.map(({ node }) => {\n                return (\n                  <FlexItem>\n                    <BlogCard key={node.id} blog={node} />\n                  </FlexItem>\n                )\n              })}\n            </FlexContainer>\n          </Section>\n          <Pagination>\n            {!isFirst && (\n              <AniLink\n                className=\"btn\"\n                cover\n                bg=\"var(--background)\"\n                to={prevPage}\n              >\n                Prev\n              </AniLink>\n            )}\n\n            {Array.from({ length: numPages }, (_, i) => {\n              return (\n                <AniLink\n                  key={i}\n                  cover\n                  bg=\"var(--background)\"\n                  to={`/blogs/${i === 0 ? \"\" : i + 1}`}\n                  className={i + 1 === currentPage ? \"btn btn-active\" : \"btn\"}\n                >\n                  {i + 1}\n                </AniLink>\n              )\n            })}\n            {!isLast && (\n              <AniLink\n                className=\"btn\"\n                cover\n                bg=\"var(--background)\"\n                to={nextPage}\n              >\n                Next\n              </AniLink>\n            )}\n          </Pagination>\n        </Grid>\n      </section>\n    </>\n  )\n}\n\nexport const query = graphql`\n  query getPosts($skip: Int!, $limit: Int!) {\n    post: allContentfulPosts(\n      skip: $skip\n      limit: $limit\n      sort: { fields: published, order: DESC }\n    ) {\n      edges {\n        node {\n          slug\n          title\n          postId: contentful_id\n          published(formatString: \"MMMM Do, YYYY\")\n          images {\n            gatsbyImageData(width: 600, formats: [AUTO, WEBP])\n          }\n        }\n      }\n    }\n  }\n`\nexport default Blog\n"],"sourceRoot":""}
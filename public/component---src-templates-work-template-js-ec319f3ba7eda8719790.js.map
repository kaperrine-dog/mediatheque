{"version":3,"sources":["webpack://mediatheque/./src/components/Button/Button.js","webpack://mediatheque/./src/components/Faq.js","webpack://mediatheque/./src/templates/work-template.js"],"names":["text","link","className","cover","bg","to","FaqItem","styled","FaqTitle","FaqDesc","title","description","useState","showInfo","setInfo","onClick","ImageLinkArea","ContentArea","ImageGallery","FaqBlock","data","product","name","price","images","url","faq","console","log","mainImage","productImages","Grid","href","G","image","gatsbyImageData","Button","map","item","index","key","alt"],"mappings":"uIAWA,IARe,SAAC,GAAoB,IAAlBA,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KACtB,OACE,gBAAC,IAAD,CAASC,UAAU,MAAMC,OAAK,EAACC,GAAG,UAAUC,GAAIJ,GAC7CD,K,wHCHDM,EAAUC,wBAAH,uDAAGA,CAAH,sEAaPC,EAAWD,oBAAH,wDAAGA,CAAH,wjBAsDRE,EAAUF,oBAAH,uDAAGA,CAAH,wBAsBb,EAlBY,SAAC,GAA4B,IAA1BG,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YAAkB,GACVC,eAAS,GAA9BC,EAD+B,KACrBC,EADqB,KAOtC,OACE,gBAACR,EAAD,CAASJ,UAAWW,EAAc,WAAkB,cAClD,gBAACL,EAAD,CAAUO,QANK,WACjBD,GAAQ,SAAAD,GAAQ,OAAKA,OAMjB,0BAAKH,GACL,wBAAMR,UAAU,eAEjBW,GAAY,gBAACJ,EAAD,KAAUE,K,oBC9EvBK,EAAgBT,kBAAH,oEAAGA,CAAH,wLAcbU,EAAcV,oBAAH,kEAAGA,CAAH,sIAuBXW,GAPSX,uBAAH,6DAAGA,CAAH,sDAOSA,oBAAH,mEAAGA,CAAH,gbA+BZY,EAAWZ,oBAAH,+DAAGA,CAAH,sBAuFd,EAjFwB,SAAC,GAAc,IAAD,IAAXa,KAQhBC,QANPC,EAFkC,EAElCA,KACAC,EAHkC,EAGlCA,MACeZ,EAJmB,EAIlCA,YAAeA,YACfa,EALkC,EAKlCA,OACAC,EANkC,EAMlCA,IACAC,EAPkC,EAOlCA,IAGFC,QAAQC,IAAIJ,GAVwB,IAW7BK,EAA+BL,EAXF,GAWfM,EAAiBN,EAXF,SAYpC,OAAO,gCACL,gBAAC,IAAD,CAAKd,MAAOY,IACZ,2BAASpB,UAAU,mBACjB,gBAAC6B,EAAA,EAAD,KAEE,gBAACf,EAAD,CACEgB,KAAOP,GAEP,gBAAC,EAAAQ,EAAD,CACEC,MAAOL,EAAUM,gBACjBjC,UAAU,gBAGd,gBAACe,EAAD,KACE,0BAAKK,GACL,8BAAMC,GACN,yBAAIZ,GACJ,gBAACyB,EAAA,EAAD,CAAQpC,KAAK,cAAcC,KAAK,aAChC,gBAACiB,EAAD,KACGY,EAAcO,KAAI,SAACC,EAAMC,GACxB,OACE,gBAAC,EAAAN,EAAD,CACEC,MAAOI,EAAKH,gBACZjC,UAAU,sBACVsC,IAAKD,EACLE,IAAI,uBAIZ,gBAACtB,EAAD,KACGO,EAAIW,KAAI,SAACC,EAAMC,GACd,OACE,gBAAC,EAAD,CACEC,IAAKD,EACL7B,MAAO4B,EAAK5B,MACZC,YAAa2B,EAAK3B","file":"component---src-templates-work-template-js-ec319f3ba7eda8719790.js","sourcesContent":["import React from \"react\"\nimport AniLink from \"gatsby-plugin-transition-link/AniLink\"\n\nconst Button = ({ text, link }) => {\n  return (\n    <AniLink className=\"btn\" cover bg=\"#1d1d1d\" to={link}>\n      {text}\n    </AniLink>\n  )\n}\n\nexport default Button\n","import React, { useState } from \"react\"\nimport styled from \"styled-components\"\n\nconst FaqItem = styled.article`\n  &.faq-open {\n    .indicator {\n      &:before {\n        left: 19px;\n      }\n      &:after {\n        right: 19px;\n      }\n    }\n  }\n`\n\nconst FaqTitle = styled.div`\n  color: var(--text-color);\n  padding: 14px 15px;\n  background-color: #272727;\n  position: relative;\n  margin-bottom: 5px;\n\n  @media (hover: hover) {\n    &:hover {\n      cursor: pointer;\n    }\n  }\n\n  h2 {\n    margin: 0;\n    font-weight: 900;\n\n    @media (min-width: 1200px) {\n      font-size: 1.125rem;\n    }\n  }\n\n  .indicator {\n    width: 50px;\n    height: 100%;\n    position: absolute;\n    right: 0;\n    top: 0;\n    bottom: 0;\n\n    &:before,\n    &:after {\n      position: absolute;\n      content: \"\";\n      display: inline-block;\n      width: 12px;\n      height: 3px;\n      background-color: var(--primary);\n      top: 50%;\n    }\n    &:before {\n      left: 15px;\n      transform: rotate(45deg);\n      transition: left 0.1s;\n    }\n\n    &:after {\n      right: 15px;\n      transform: rotate(-45deg);\n      transition: right 0.1s;\n    }\n  }\n`\n\nconst FaqDesc = styled.div`\n  padding: 20px 15px;\n`\n\nconst Faq = ({ title, description }) => {\n  const [showInfo, setInfo] = useState(false)\n\n  const toggleInfo = () => {\n    setInfo(showInfo => !showInfo)\n  }\n\n  return (\n    <FaqItem className={showInfo ? `${\"faq-open\"}` : `${\"faq-closed\"}`}>\n      <FaqTitle onClick={toggleInfo}>\n        <h2>{title}</h2>\n        <span className=\"indicator\"></span>\n      </FaqTitle>\n      {showInfo && <FaqDesc>{description}</FaqDesc>}\n    </FaqItem>\n  )\n}\n\nexport default Faq\n","import { graphql } from \"gatsby\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"../components/Button/Button\";\nimport Faq from \"../components/Faq\";\nimport Grid from \"../components/Grid/Grid\";\nimport Seo from \"../components/SEO\";\n\nconst ImageLinkArea = styled.a`\n  grid-column: 1 / 4;\n  height: fit-content;\n  .main-image {\n    border-bottom: 3px solid var(--primary);\n  }\n  @media (min-width: 765px){\n    grid-column: 1 / 2;\n  }\n  @media (min-width: 1000px) {\n    grid-column: 1 / 2;\n  }\n`\n\nconst ContentArea = styled.div`\n  grid-column: 1 / 4;\n  @media (min-width: 1000px) {\n    grid-column: 2 / 4;\n  }\n\n  h1 {\n    margin-top: 0;\n    text-transform: capitalize;\n  }\n\n  p {\n    margin-bottom: 40px;\n  }\n`\n\nconst Iframe = styled.iframe`\n  width: 100%;\n  min-height: 400px;\n  aspect-ratio: 16 / 9;\n  //background: white;\n`\n\nconst ImageGallery = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n  justify-content: space-between;\n  margin-top: 30px;\n  margin-bottom: 30px;\n\n  .image-gallery--item {\n    flex: 0 0 calc(50% - 10px);\n    margin-top: 10px;\n    margin-bottom: 10px;\n  }\n\n  @media (min-width: 769px) {\n    margin-top: 20px;\n    margin-bottom: 20px;\n    .image-gallery--item {\n      flex-basis: calc((100% / 3) - 40px);\n      margin-top: 20px;\n      margin-bottom: 20px;\n    }\n  }\n\n  @media (min-width: 1200px) {\n    .image-gallery--item {\n      flex-basis: calc(50% - 20px);\n    }\n  }\n`\n\nconst FaqBlock = styled.div`\n  margin-top: 40px;\n`\n\n\n\nconst productTemplate = ({ data }) => {\n  const {\n    name,\n    price,\n    description: { description },\n    images,\n    url,\n    faq,\n  } = data.product\n\n  console.log(images)\n  const [mainImage, ...productImages] = images\n  return <>\n    <Seo title={name} />\n    <section className=\"section-padding\">\n      <Grid>\n        \n        <ImageLinkArea\n          href={ url }\n        >\n          <GatsbyImage \n            image={mainImage.gatsbyImageData} \n            className=\"main-image\" \n          />\n        </ImageLinkArea>\n        <ContentArea>\n          <h1>{name}</h1>\n          <h2>Â£{price}</h2>\n          <p>{description}</p>\n          <Button text=\"Enquire Now\" link=\"/contact\" />\n          <ImageGallery>\n            {productImages.map((item, index) => {\n              return (\n                <GatsbyImage\n                  image={item.gatsbyImageData}\n                  className=\"image-gallery--item\"\n                  key={index}\n                  alt=\"Single product\" />\n              );\n            })}\n          </ImageGallery>\n          <FaqBlock>\n            {faq.map((item, index) => {\n              return (\n                <Faq\n                  key={index}\n                  title={item.title}\n                  description={item.description}\n                />\n              )\n            })}\n          </FaqBlock>\n        </ContentArea>\n      </Grid>\n    </section>\n  </>;\n}\n\nexport const query = graphql`\n  query($slug: String) {\n    product: contentfulWorks(slug: { eq: $slug }) {\n      name\n      price\n      description {\n        description\n      }\n      faq {\n        title\n        description\n      }\n      images {\n        fluid {\n          ...GatsbyContentfulFluid_tracedSVG\n        }\n        gatsbyImageData\n      }\n      url\n    }\n  }\n`\n\nexport default productTemplate\n"],"sourceRoot":""}
{"version":3,"sources":["webpack://mediatheque/./src/components/Blog/BlogCard.js","webpack://mediatheque/./src/components/PageIntro/PageIntro.js","webpack://mediatheque/./src/components/Blog/BlogList.js","webpack://mediatheque/./src/pages/blog.js"],"names":["BlogItem","styled","BlogItemContent","Bottom","blog","slug","title","images","published","image","getImage","className","cover","bg","to","G","alt","TitleArea","Title","ContentArea","subTitle","paragraph","Section","FlexContainer","FlexItem","posts","useStaticQuery","edges","map","node","BlogCard","key","id","Grid","PageIntro"],"mappings":"sJAMMA,EAAWC,wBAAH,8DAAGA,CAAH,gCAKRC,EAAkBD,oBAAH,qEAAGA,CAAH,wXA6BfE,EAASF,oBAAH,4DAAGA,CAAH,0FAmCZ,IA1BiB,SAAC,GAAc,IAAZG,EAAW,EAAXA,KACVC,EAAmCD,EAAnCC,KAAMC,EAA6BF,EAA7BE,MAAOC,EAAsBH,EAAtBG,OAAQC,EAAcJ,EAAdI,UAGvBC,GAAQC,OAASH,EAAO,IAC9B,OACE,gBAACP,EAAD,KACE,gBAAC,IAAD,CACEW,UAAU,MACVC,OAAK,EACLC,GAAG,oBACHC,GAAE,UAAYT,GAEd,gBAAC,EAAAU,EAAD,CAAaN,MAAOA,EAAOO,IAAI,gBAC/B,gBAACd,EAAD,KACE,0BAAKI,GACL,gBAACH,EAAD,KACE,4BAAOK,GACP,0BAAQG,UAAU,OAAlB,mB,uDChENM,EAAYhB,oBAAH,4DAAGA,CAAH,oEAOTiB,EAAQjB,mBAAH,wDAAGA,CAAH,uEAOLkB,EAAclB,oBAAH,8DAAGA,CAAH,qFA0BjB,IAdkB,SAAC,GAAoC,IAAlCK,EAAiC,EAAjCA,MAAOc,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UACpC,OACE,gCACE,gBAACJ,EAAD,KACE,gBAACC,EAAD,KAAQZ,IAEV,gBAACa,EAAD,KACE,0BAAKC,GACL,yBAAIC,O,wHChCNC,EAAUrB,wBAAH,4DAAGA,CAAH,6DAKPsB,EAAgBtB,oBAAH,kEAAGA,CAAH,kCAKbuB,EAAWvB,oBAAH,6DAAGA,CAAH,oHA8Cd,EAjBiB,WAAO,IACdwB,GAAUC,oBAlBN,aAkBJD,MACR,OACE,gBAACH,EAAD,KACE,gBAACC,EAAD,KACGE,EAAME,MAAMC,KAAI,YAAe,IAAZC,EAAW,EAAXA,KAClB,OACE,gBAACL,EAAD,KACE,gBAACM,EAAA,EAAD,CAAUC,IAAKF,EAAKG,GAAI5B,KAAMyB,W,8BC5B5C,EAlBa,WACX,OACE,gCACE,gBAAC,IAAD,CAAKvB,MAAM,SACX,2BAASK,UAAU,mBACjB,gBAACsB,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,CACE5B,MAAM,OACNc,SAAS,GACTC,UAAU,KAEZ,gBAAC,EAAD","file":"component---src-pages-blog-js-1a7c4c7f07aed6d49234.js","sourcesContent":["import {GatsbyImage, getImage} from \"gatsby-plugin-image\"\nimport AniLink from \"gatsby-plugin-transition-link/AniLink\"\nimport React from \"react\"\nimport styled from \"styled-components\"\n//import { Background } from 'react-parallax';\n\nconst BlogItem = styled.article`\n  width: 100%;\n  padding: 0 20px;\n`\n\nconst BlogItemContent = styled.div`\n  background-color: var(--blogPanelBG);\n  border-top: 3px solid var(--primary);\n  padding: 1.5rem 1.25rem;\n  min-height: 14rem;\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n\n  @media (min-width: 769px) {\n    max-width: calc((100vw - 60px - 80px) / 3);\n    margin-bottom: 0;\n  }\n\n  h2 {\n    margin-top: 0;\n    margin-bottom: 20px;\n    display: inline-block;\n  }\n\n  p {\n    margin-bottom: 40px;\n  }\n`\nconst Bottom = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  span{\n    padding: 0 0 6px;\n  }\n`\n\nconst BlogCard = ({ blog }) => {\n  const { slug, title, images, published } = blog\n\n  // let mainImage = images[0].fluid\n  const image = getImage(images[0])\n  return (\n    <BlogItem>\n      <AniLink\n        className=\"btn\"\n        cover\n        bg=\"var(--background)\"\n        to={`/blogs/${slug}`}\n      >\n        <GatsbyImage image={image} alt=\"Single Post\" />\n        <BlogItemContent>\n          <h2>{title}</h2>\n          <Bottom>\n            <span>{published}</span>\n            <button className=\"btn\">Read Post</button>\n          </Bottom>\n        </BlogItemContent>\n      </AniLink>\n    </BlogItem>\n  )\n}\n\nexport default BlogCard\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nconst TitleArea = styled.div`\n  grid-column: 3 / 2;\n  @media (min-width: 769px) {\n    grid-column: 1 / 2;\n  }\n`\n\nconst Title = styled.h1`\n  margin: 2rem 0 0;\n  @media (min-width: 769px){\n    margin-bottom: 2.125rem;\n  }\n`\n\nconst ContentArea = styled.div`\n  grid-column: 1/4;\n  @media (min-width: 769px) {\n    grid-column: 2 / 4;\n\n    h2,\n    p {\n      margin-top: 0;\n    }\n  }\n`\n\nconst PageIntro = ({ title, subTitle, paragraph }) => {\n  return (\n    <>\n      <TitleArea>\n        <Title>{title}</Title>\n      </TitleArea>\n      <ContentArea>\n        <h2>{subTitle}</h2>\n        <p>{paragraph}</p>\n      </ContentArea>\n    </>\n  )\n}\n\nexport default PageIntro\n","import { graphql, useStaticQuery } from \"gatsby\"\nimport React from \"react\"\nimport styled from \"styled-components\"\nimport BlogCard from \"./BlogCard\"\n\nconst Section = styled.section`\n  grid-column: 1 / 4;\n  margin-left: -20px;\n  margin-right: -20px;\n`\nconst FlexContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`\n\nconst FlexItem = styled.div`\n  width: 100%;\n  margin-bottom: 40px;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n  @media (min-width: 769px) {\n    flex: 0 0 calc(100% / 3);\n  }\n`\n\nconst getPosts = graphql`\n  query {\n    posts: allContentfulPosts(sort: { fields: published, order: DESC }) {\n      edges {\n        node {\n          published(formatString: \"MMMM Do, YYYY\")\n          title\n          slug\n          postId: contentful_id\n          images {\n            gatsbyImageData(width: 600, formats: [AUTO, WEBP])\n          }\n        }\n      }\n    }\n  }\n`\nconst BlogList = () => {\n  const { posts } = useStaticQuery(getPosts)\n  return (\n    <Section>\n      <FlexContainer>\n        {posts.edges.map(({ node }) => {\n          return (\n            <FlexItem>\n              <BlogCard key={node.id} blog={node} />\n            </FlexItem>\n          )\n        })}\n      </FlexContainer>\n    </Section>\n  )\n}\n\nexport default BlogList\n","import React from \"react\"\nimport BlogList from \"../components/Blog/BlogList\"\nimport Grid from \"../components/Grid/Grid\"\nimport PageIntro from \"../components/PageIntro/PageIntro\"\nimport Seo from \"../components/SEO\"\n\nconst blog = () => {\n  return (\n    <>\n      <Seo title=\"Blog\" />\n      <section className=\"section-padding\">\n        <Grid>\n          <PageIntro\n            title=\"Blog\"\n            subTitle=\"\"\n            paragraph=\"\"\n          />\n          <BlogList />\n        </Grid>\n      </section>\n    </>\n  )\n}\n\nexport default blog\n"],"sourceRoot":""}